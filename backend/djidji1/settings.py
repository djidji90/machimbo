"""
Django settings for djidji1 project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
from decimal import Decimal
import os

API_INFO_KEY = os.getenv("API_INFO_KEY")


BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
GEOIP_PATH = os.path.join(BASE_DIR, "geoip")



import os
from dotenv import load_dotenv

# Cargar las variables de entorno desde el archivo .env
load_dotenv()

# Imprimir la clave secreta


 # Cargar variables de entorno desde el archivo .env
from datetime import timedelta
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=15),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': os.getenv('JWT_SECRET_KEY'),  # Usar la clave secreta generada
    'AUTH_HEADER_TYPES': ('Bearer',),
    'USER_ID_FIELD': 'username',
    'USER_ID_CLAIM': 'user_id'
}

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        },
    }
}



from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY =  os.getenv('JWT_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
     "corsheaders",
     'django_celery_beat',
    'musica',
     'django_celery_results',
    'api2',
    'monedero.apps.MonederoConfig',
    
     'drf_yasg',
     'django_filters',
      'rest_framework.authtoken',
       "rest_framework_simplejwt",
    'rest_framework',
    'tienda',
    'ventas',

]

AUTH_USER_MODEL = 'musica.CustomUser'


import os

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')




MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
     'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'api2.middleware.SongFileCheckMiddleware',
    "musica.middleware.UserVisitMiddleware",
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
]


ROOT_URLCONF = 'djidji1.urls'

CORS_ALLOWED_ORIGINS = [
    'http://localhost:5174', 'http://localhost:5175', 'http://localhost:5173', 'http://localhost:5178','http://localhost:5186','http://localhost:5176', 'http://localhost:4173', 'http://localhost:41734', "http://127.0.0.1:4173", 'http://localhost:4174'
]
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
X_FRAME_OPTIONS = "DENY"
CSRF_COOKIE_SECURE = not DEBUG
SESSION_COOKIE_SECURE = not DEBUG


REST_FRAMEWORK = {
     'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication'
    
    ],

    
      'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 5, 

    'DEFAULT_THROTTLE_RATES': {
        'transacciones': '100/minute',
        'upload': '100/hour',
        'transferencias': '100/hour',
         'anon': '100/hour',
        'user': '100/hour'
    }, 

     
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}

# settings.py
CURRENCY_CHOICES = [
    ('XAF', 'Franco CFA Centroafricano'),
    ('XOF', 'Franco CFA Occidental'),
]

# Configuración de seguridad
MAX_PIN_ATTEMPTS = 3
PIN_LOCK_DURATION = timedelta(minutes=15)
MAX_DAILY_TRANSFER = Decimal('1000000.00')

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djidji1.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'djidji1',        # Nombre de la base de datos
        'USER': 'postgres',       # Usuario de PostgreSQL
        'PASSWORD': 'machimbo90', # Contraseña
        'HOST': 'localhost',      # Host
        'PORT': '5432',           # Puerto
        'OPTIONS': {
            'options': '-c work_mem=64MB -c maintenance_work_mem=256MB'
        },
    }
}

import os
import dj_database_url

DATABASES = {
    'default': dj_database_url.config(default=os.environ.get('DATABASE_URL'))
}

REDIS_URL = os.environ.get('REDIS_URL')

ALLOWED_HOSTS = os.environ.get('DJANGO_ALLOWED_HOSTS', 'localhost').split(',')


# Celery settings
# Celery settings
# En settings.py, agrega:
CELERY_TASK_ALWAYS_EAGER = True
CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'django-db'  # Si usas django_celery_results
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE =' Africa/Malabo'


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'es-us'

TIME_ZONE = "Africa/Malabo"

USE_I18N = True


USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "file": {
            "level": "ERROR",
            "class": "logging.FileHandler",
            "filename": BASE_DIR / "logs/django_errors.log",
        },
    },
    "loggers": {
        "django": {
            "handlers": ["file"],
            "level": "ERROR",
            "propagate": True,
        },
    },
}

# Configuración de wallet
WALLET_SETTINGS = {
    'MAX_PIN_ATTEMPTS': 3,
    'PIN_LOCK_DURATION_MINUTES': 30,
    'DAILY_LIMIT_DEFAULT': Decimal('1000000.00'),
    'CURRENCIES': [
        ('USD', 'Dólares Estadounidenses'),
        ('EUR', 'Euros'),
        ('XAF', 'Franco CFA Centroafricano'),
        ('XOF', 'Franco CFA Occidental'),
        
    # Moneda por defecto
    ]
}
DEFAULT_CURRENCY = 'XAF' # Primera moneda configurada

import os
from pathlib import Path

# Crear directorio logs si no existe
LOG_DIR = BASE_DIR / 'logs'
LOG_DIR.mkdir(exist_ok=True)  # Esto creará la carpeta si no existe

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'celery_file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': str(LOG_DIR / 'celery_tasks.log'),  # Ruta relativa
            'formatter': 'verbose',
        },
        'celery_errors': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': str(LOG_DIR / 'celery_errors.log'),  # Ruta relativa
            'formatter': 'verbose',
        },
        'django_errors': {  # Puedes mantener tu logger de Django también
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': str(LOG_DIR / 'django_errors.log'),
        },
    },
    'loggers': {
        'monedero.tasks': {
            'handlers': ['celery_file', 'celery_errors'],
            'level': 'INFO',
            'propagate': True,
        },
        'django': {
            'handlers': ['django_errors'],
            'level': 'ERROR',
            'propagate': True,
        },
    },
}

# settings.py
# Configuración de monedero
MONEDERO_CONFIG = {
    'SALDO_MINIMO': Decimal('2000.00'),
    'MAX_RETIRO_DIARIO': Decimal('1000000.00'),
    'MAX_RECARGA': Decimal('100000.00'),
    'INTENTOS_PIN': 3,
    'TIEMPO_BLOQUEO_MINUTOS': 10,
    'COMISION_TRANSFERENCIA': Decimal('0.01'),  # 1%
}

# Logger específico
from celery.schedules import crontab

CELERY_BEAT_SCHEDULE = {
    'liberar-fondos': {
        'task': 'ventas.tasks.liberar_fondos_retenidos',
        'schedule': crontab(minute='*/15'),  # Every 15 minutes
    },
    'actualizar-destacados': {
        'task': 'ventas.tasks.actualizar_productos_destacados',
        'schedule': crontab(hour=3, minute=0),  # Daily at 3 AM
    },
}